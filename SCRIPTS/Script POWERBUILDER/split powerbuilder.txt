

long ll_tamanho, ll_linha, ll_primeiro = 1, ll_len_matricula, ll_qtd = 1 
long ll_filtro, ll_filtro_linha
string ls_text, ls_text2
boolean lb_status = true

string ls_array[]
ls_array[1] = ''
string ls_filtro = "`~!@#$%^&*()-_=+[]{}|;:<>./?abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"+ "'" + '"'

ll_filtro = len(ls_filtro)
ll_tamanho = len(em_mat.text)
messagebox('linha', ll_tamanho)

FOR ll_linha = 1 TO ll_tamanho 
	ls_text = Mid(em_mat.text, ll_linha, 1)	
	
	FOR ll_filtro_linha = 1 TO ll_filtro
		ls_text2 = Mid(ls_filtro, ll_filtro_linha, 1)
			//messagebox('linha', ls_text2)
		if ls_text = ls_text2 then
			messagebox('Valor Inválido','Digite apenas matriculas separadas por virgulas')
			em_mat.text = ''
			lb_status = false
			exit
		end if
	NEXT
		
	if (ls_text = ',' or ls_text = ' ') and lb_status and em_mat.text <> ' ' then
		ll_len_matricula = ll_linha -  ll_primeiro		
		ls_array[ll_qtd] = Mid(em_mat.text, ll_primeiro, ll_len_matricula)
		
	   messagebox('Tamanho', 'Tamanho: ' +string(ll_len_matricula)+ ', Inicio: '+string(ll_primeiro)+', texto: '+ ls_array[ll_qtd])
		
		ll_qtd = ll_qtd + 1
		ll_primeiro = ll_linha + 1
	end if
	
	if ll_linha = ll_tamanho and lb_status and em_mat.text <> ' ' then
		ls_array[ll_qtd] = Mid(em_mat.text, ll_primeiro, (ll_linha -  ll_primeiro + 1))
		//messagebox('Tamanho', 'len: ' +string(ll_tamanho -  ll_primeiro)+ ', Inicio: '+string(ll_primeiro)+', texto: '+ ls_array[ll_qtd])
	end if
		
NEXT


FOR ll_linha = 1 TO ll_qtd 
	messagebox(string(ll_linha) +'° matricula', ls_array[ll_linha])
NEXT
